/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT 0
#define LWR     1
#define RAS     2
#define ADJ     3

&caps_word { continue-list = <UNDERSCORE MINUS>; };

&mt { tapping-term-ms = <250>; };

/ {
    combos {
    };
};

/ {
    conditional_layers { compatible = "zmk,conditional-layers"; };
};

/ {
    behaviors {
        ag_ht: ag_ht {
            compatible = "zmk,behavior-hold-tap";
            label = "AG_HT";
            bindings = <&gui>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        td_up: td_up {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_UP";
            #binding-cells = <0>;
            bindings = <&mt PG_UP UP_ARROW>, <&ag UP_ARROW>;

            tapping-term-ms = <250>;
        };

        td_down: td_down {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DOWN";
            #binding-cells = <0>;
            bindings = <&mt PG_DN DOWN>, <&ag DOWN>;

            tapping-term-ms = <250>;
        };

        td_left: td_left {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_LEFT";
            #binding-cells = <0>;
            bindings = <&mt LA(LEFT) LEFT>, <&ag LEFT>;

            tapping-term-ms = <250>;
        };

        td_right: td_right {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_RIGHT";
            #binding-cells = <0>;
            bindings = <&mt LA(RIGHT) RIGHT>, <&ag RIGHT>;

            tapping-term-ms = <250>;
        };

        hyper: hyper {
            compatible = "zmk,behavior-tap-dance";
            label = "HYPER";
            #binding-cells = <0>;
            bindings =
                <&mt LS(LA(LG(LEFT_CONTROL))) ESCAPE>,
                <&mt C_AL_LOCK C_POWER>,
                <&mt LC(LG(ESC)) LC(C_POWER)>;

            tapping-term-ms = <300>;
        };

        ht_sos: ht_sos {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_SOS";
            bindings = <&kp>, <&sos>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        mo_tog: mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "MO_TOG";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
        };

        ht_slash: ht_slash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_SLASH";
            bindings = <&interrobang>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        ht_emdash: ht_emdash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_EMDASH";
            bindings = <&kp>, <&doubledash>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        ht_endash: ht_endash {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_ENDASH";
            bindings = <&kp>, <&tripledash>;

            #binding-cells = <2>;
            tapping-term-ms = <250>;
            flavor = "tap-preferred";
        };

        td_ques: td_ques {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUES";
            #binding-cells = <0>;
            bindings = <&ht_slash 0 SLASH>, <&kp QUESTION>, <&wth>;

            tapping-term-ms = <250>;
        };

        td_quote: td_quote {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp DOUBLE_QUOTES>;

            tapping-term-ms = <250>;
        };

        td_colon: td_colon {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COLON";
            #binding-cells = <0>;
            bindings = <&kp SEMICOLON>, <&kp COLON>;

            tapping-term-ms = <250>;
        };

        td_open: td_open {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_OPEN";
            #binding-cells = <0>;
            bindings = <&ag LEFT_BRACKET>, <&kp LEFT_BRACE>;

            tapping-term-ms = <250>;
        };

        td_close: td_close {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CLOSE";
            #binding-cells = <0>;
            bindings = <&ag RIGHT_BRACKET>, <&kp RIGHT_BRACE>;

            tapping-term-ms = <250>;
        };

        td_dash: td_dash {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_DASH";
            #binding-cells = <0>;
            bindings =
                <&mt UNDERSCORE MINUS>,
                <&ht_emdash LS(LA(MINUS)) 0>,
                <&ht_endash LA(MINUS) 0>;
        };

        td_3key: td_3key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_3KEY";
            #binding-cells = <0>;
            bindings = <&mt F3 HASH>, <&kp LA(LS(NUMBER_2))>;
        };

        td_4key: td_4key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_4KEY";
            #binding-cells = <0>;
            bindings = <&mt F4 LA(NUMBER_3)>, <&kp DOLLAR>;
        };

        td_5key: td_5key {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_5KEY";
            #binding-cells = <0>;
            bindings = <&mt F5 PERCENT>, <&kp LA(NUMBER_2)>;
        };
    };

    macros {
        gui: gui {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI>,
                <&macro_tap>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_press>,
                <&kp LEFT_GUI>;

            label = "GUI";
        };

        ag: ag {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &ag_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;

            label = "AG";
        };

        interrobang: interrobang {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp EXCLAMATION>,
                <&macro_release>;

            label = "INTERROBANG";
        };

        wth: wth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp QUESTION &kp QUESTION &kp QUESTION>,
                <&macro_release>;

            label = "WTH";
        };

        sos: sos {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LA(LG(ESC))>, <&macro_release>;

            label = "SOS";
        };

        powerup: powerup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LC(C_POWER)>, <&macro_release>;

            label = "POWERUP";
        };

        doubledash: doubledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp MINUS &kp MINUS>, <&macro_release>;

            label = "DOUBLEDASH";
        };

        tripledash: tripledash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp MINUS &kp MINUS &kp MINUS>,
                <&macro_release>;

            label = "TRIPLEDASH";
        };
    };

    combos {
        compatible = "zmk,combos";

        capwordz {
            bindings = <&caps_word>;
            key-positions = <26 27>;
        };

        caplocks {
            bindings = <&kp CAPSLOCK>;
            key-positions = <26 36>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
            bindings = <
&hyper                    &ag Q     &ag W       &ag E       &ag R                 &ag T                             &ag Y        &ag U        &ag I                            &ag O                            &ag P        &mo_tog 4 4
&mt LC(LS(LALT)) TAB      &ag A     &ag S       &ag D       &ag F                 &ag G                 &kp PG_UP   &ag H        &ag J        &ag K                            &ag L                            &td_quote    &td_colon
&mt LEFT_CONTROL LC(TAB)  &ag Z     &ag X       &ag C       &ag V                 &ag B                 &kp PG_DN   &ag N        &ag M        &ag COMMA                        &ag DOT                          &td_ques     &sk LEFT_GUI
&sk LCTRL                 &sk LGUI  &lt 2 BSPC  &lt 2 BSPC  &mt LEFT_SHIFT ENTER  &mt LEFT_SHIFT ENTER  &kp C_MUTE  &lt 1 SPACE  &lt 1 SPACE  &mt LG(BACKSPACE) LA(BACKSPACE)  &mt LG(BACKSPACE) LA(BACKSPACE)  &mo_tog 3 3  &mo_tog 3 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            label = "Lower";
            bindings = <
&trans  &ag NUMBER_1  &ag NUMBER_2  &ag NUMBER_3  &ag NUMBER_4  &ag N5          &ag NUMBER_6  &ag N7     &ag N8        &ag N9                     &ag N0        &trans
&trans  &none         &none         &none         &none         &none   &none   &ag UP_ARROW  &td_open   &td_dash      &mt LG(UP_ARROW) UP_ARROW  &kp PLUS      &kp BSLH
&trans  &none         &none         &none         &none         &none   &none   &ag DOWN      &td_close  &kp LG(LEFT)  &mt LG(DOWN) PERIOD        &kp LG(PLUS)  &trans
&trans  &trans        &trans        &trans        &trans        &trans  &trans  &trans        &trans     &trans        &trans                     &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        raise_layer {
            label = "Raise";
            bindings = <
&trans  &mt F1 EXCL  &mt F2 AT  &td_3key  &td_4key       &td_5key               &mt F6 CARET  &mt F7 AMPS  &mt F8 ASTRK  &mt F9 LPAR        &mt F10 RPAR  &trans
&trans  &none        &none      &none     &none          &none          &none   &trans        &trans       &trans        &kp C_VOLUME_UP    &trans        &kp BSLH
&trans  &kp CAPS     &none      &none     &none          &none          &none   &trans        &trans       &kp C_PREV    &kp C_VOLUME_DOWN  &kp C_NEXT    &trans
&trans  &trans       &trans     &trans    &kp LS(ENTER)  &kp LS(ENTER)  &trans  &trans        &trans       &trans        &trans             &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(RBKT)) LG(LS(LBKT))>;
        };

        adjust_layer {
            label = "Adjust";
            bindings = <
&trans  &none   &none   &none   &ag R                 &none                         &ag Y   &studio_unlock  &none     &none     &none      &trans
&trans  &ag A   &ag S   &ag D   &ag F                 &ag G                 &trans  &trans  &trans          &none     &td_up    &none      &none
&trans  &ag Z   &ag X   &ag C   &ag V                 &ag B                 &trans  &ag N   &trans          &td_left  &td_down  &td_right  &trans
&trans  &trans  &trans  &trans  &mt LEFT_SHIFT ENTER  &mt LEFT_SHIFT ENTER  &trans  &trans  &trans          &trans    &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp LG(LS(LBKT)) LG(LS(RBKT))>;
        };

        numpad_layer {
            bindings = <
&none  &none  &none  &none  &none  &none          &kp N7     &kp N8     &kp N9  &kp KP_MULTIPLY  &none     &trans
&none  &none  &none  &none  &none  &none  &kp N0  &kp N4     &kp N5     &kp N6  &kp PLUS         &none     &none
&none  &none  &none  &none  &none  &none  &kp N0  &kp N1     &kp N2     &kp N3  &kp MINUS        &kp FSLH  &none
&none  &none  &none  &none  &none  &none  &none   &kp EQUAL  &kp EQUAL  &trans  &kp NUMBER_0     &none     &none
            >;

            label = "Numpad";
        };
    };
};
